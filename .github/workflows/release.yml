name: "Release"

on:
  push:
    branches: ["ci"]
    # tags:
    #   - "v*"

env:
  CARGO_INCREMENTAL: 0

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: x86_64-unknown-linux-musl,
              exe: amd64-linux,
              os: ubuntu-latest,
              features: default,
            }
          - {
              target: aarch64-unknown-linux-musl,
              exe: aarch64-linux,
              os: ubuntu-latest,
              features: default,
            }
          - {
              target: armv7-unknown-linux-musl,
              exe: armv7-linux,
              os: ubuntu-latest,
              features: default,
            }
          - {
              target: x86_64-apple-darwin,
              exe: macos,
              os: macos-latest,
              features: default,
            }
          - {
              target: aarch64-apple-darwin,
              exe: arm64-macos,
              os: macos-latest,
              features: default,
            }
    runs-on: ${{ matrix.job.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.job.target }}
          components: rust-src
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          args: --release --target=${{ matrix.job.target }} --locked
          command: build
      - name: Rename build
        run: |
          rm target/${{ matrix.job.target }}/release/cmd-wrapped.d
          cp target/${{ matrix.job.target }}/release/cmd-wrapped cmd-wrapped-${{ matrix.job.exe }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: cmd-wrapped-${{ matrix.job.exe }}

  #cargo-publish:
  #  runs-on: ubuntu-20.04
  #  needs: build
  #  steps:
  #    - uses: actions/checkout@v3

  #    - name: Cargo publish
  #      run: |
  #        git config --global user.email "runner@gha.local"
  #        git config --global user.name "Github Action"
  #        cargo publish --allow-dirty --token ${{ secrets.CRATES_IO_TOKEN }}

  # release:
  #   name: "Tagged Release"
  #   runs-on: "ubuntu-20.04"
  #   needs: build
  #   steps:
  #     - uses: actions/download-artifact@v2
  #     - uses: "marvinpinto/action-automatic-releases@latest"
  #       with:
  #         repo_token: "${{ secrets.GITHUB_TOKEN }}"
  #         prerelease: false
  #         files: |
  #           ./build/cmd-wrapped-macos
  #           ./build/cmd-wrapped-arm64macos
  #           ./build/cmd-wrapped-aarch64-linux
  #           ./build/cmd-wrapped-armv7-linux
  #           ./build/cmd-wrapped-amd64-linux
