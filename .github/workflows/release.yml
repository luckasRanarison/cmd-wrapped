name: "Release"

on:
  push:
    branches: ["experiments"]
    # tags:
    #   - "v*"

env:
  CARGO_INCREMENTAL: 0

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        job:
          - target: x86_64-unknown-linux-musl
            exe: x86_64-linux
            os: ubuntu-latest
    runs-on: ${{ matrix.job.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.job.target }}
          components: rust-src
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          args: --release --target=${{ matrix.job.target }} --locked
          command: build
      - name: Rename build
        run: cp target/${{ matrix.job.target }}/release/cmd-wrapped cmd-wrapped-${{ matrix.job.exe }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: cmd-wrapped-${{ matrix.job.exe }}

  release:
    name: "Tagged Release"
    runs-on: "ubuntu-20.04"
    needs: build
    steps:
      - uses: actions/download-artifact@v3
      - name: "Compress files"
        run: |
          for file in $(find ./build -type f); do
             zip "${file}.zip" "${file}"
          done
          ls ./build
      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     prerelease: false
      #     files: |
      #       ./build/cmd-wrapped-x86_64-apple-darwin
      #       ./build/cmd-wrapped-arm64-apple-darwin
      #       ./build/cmd-wrapped-x86_64-linux
      #       ./build/cmd-wrapped-aarch64-linux
      #       ./build/cmd-wrapped-armv7-linux
